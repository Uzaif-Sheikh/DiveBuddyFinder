// <auto-generated />
using System;
using DiveBuddyFinder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiveBuddyFinder.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DiveBuddyFinder.Models.CertificateDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Agency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CertificateDetails");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.Certificates", b =>
                {
                    b.Property<Guid>("CertificateDetailsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DiverId")
                        .HasColumnType("char(36)");

                    b.HasKey("CertificateDetailsId", "DiverId");

                    b.HasIndex("DiverId");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.Diver", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("char(36)");

                    b.Property<int>("NumberOfDives")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("LocationId");

                    b.ToTable("Divers");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ExpiresOnUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.Certificates", b =>
                {
                    b.HasOne("DiveBuddyFinder.Models.CertificateDetails", "CertificateDetails")
                        .WithMany("Certificates")
                        .HasForeignKey("CertificateDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiveBuddyFinder.Models.Diver", "Diver")
                        .WithMany("Certificates")
                        .HasForeignKey("DiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CertificateDetails");

                    b.Navigation("Diver");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.Diver", b =>
                {
                    b.HasOne("DiveBuddyFinder.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiveBuddyFinder.Models.User", "User")
                        .WithOne("Diver")
                        .HasForeignKey("DiveBuddyFinder.Models.Diver", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.RefreshToken", b =>
                {
                    b.HasOne("DiveBuddyFinder.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.CertificateDetails", b =>
                {
                    b.Navigation("Certificates");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.Diver", b =>
                {
                    b.Navigation("Certificates");
                });

            modelBuilder.Entity("DiveBuddyFinder.Models.User", b =>
                {
                    b.Navigation("Diver")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
